import pygame
from pygame.locals import *
import random
import copy
sonido = pygame.mixer.Sound("sonido.wav")
sonido.play()

#Cargando imagenes
cBack = pygame.image.load('Cartas/Corazones/Cara volteada.png')
diamondA = pygame.image.load('Cartas/Diamantes/as.png')
clubA = pygame.image.load('Cartas/Trebol/as.png')
heartA = pygame.image.load('Cartas/Corazones/as.png')
spadeA = pygame.image.load('Cartas/Espadas/as.png')
diamond2 = pygame.image.load('Cartas/Diamantes/2.png')
club2 = pygame.image.load('Cartas/Trebol/2.png')
heart2 = pygame.image.load('Cartas/Corazones/2.png')
spade2 = pygame.image.load('Cartas/Espadas/2.png')
diamond3 = pygame.image.load('Cartas/Diamantes/3.png')
club3 = pygame.image.load('Cartas/Trebol/3.png')
heart3 = pygame.image.load('Cartas/Corazones/3.png')
spade3 = pygame.image.load('Cartas/Espadas/3.png')
diamond4 = pygame.image.load('Cartas/Diamantes/4.png')
club4 = pygame.image.load('Cartas/Trebol/4.png')
heart4 = pygame.image.load('Cartas/Corazones/4.png')
spade4 = pygame.image.load('Cartas/Espadas/4.png')
diamond5 = pygame.image.load('Cartas/Diamantes/5.png')
club5 = pygame.image.load('Cartas/Trebol/5.png')
heart5 = pygame.image.load('Cartas/Corazones/5.png')
spade5 = pygame.image.load('Cartas/Espadas/5.png')
diamond6 = pygame.image.load('Cartas/Diamantes/6.png')
club6 = pygame.image.load('Cartas/Trebol/6.png')
heart6 = pygame.image.load('Cartas/Corazones/6.png')
spade6 = pygame.image.load('Cartas/Espadas/6.png')
diamond7 = pygame.image.load('Cartas/Diamantes/7.png')
club7 = pygame.image.load('Cartas/Trebol/7.png')
heart7 = pygame.image.load('Cartas/Corazones/7.png')
spade7 = pygame.image.load('Cartas/Espadas/7.png')
diamond8 = pygame.image.load('Cartas/Diamantes/8.png')
club8 = pygame.image.load('Cartas/Trebol/8.png')
heart8 = pygame.image.load('Cartas/Corazones/8.png')
spade8 = pygame.image.load('Cartas/Espadas/8.png')
diamond9 = pygame.image.load('Cartas/Diamantes/9.png')
club9 = pygame.image.load('Cartas/Trebol/9.png')
heart9 = pygame.image.load('Cartas/Corazones/9.png')
spade9 = pygame.image.load('Cartas/Espadas/9.png')
diamond10 = pygame.image.load('Cartas/Diamantes/10.png')
club10 = pygame.image.load('Cartas/Trebol/10.png')
heart10 = pygame.image.load('Cartas/Corazones/10.png')
spade10 = pygame.image.load('Cartas/Espadas/10.png')
diamondJ = pygame.image.load('Cartas/Diamantes/J.png')
clubJ = pygame.image.load('Cartas/Trebol/J.png')
heartJ = pygame.image.load('Cartas/Corazones/J.png')
spadeJ = pygame.image.load('Cartas/Espadas/J.png')
diamondQ = pygame.image.load('Cartas/Diamantes/Q.png')
clubQ = pygame.image.load('Cartas/Trebol/Q.png')
heartQ = pygame.image.load('Cartas/Corazones/Q.png')
spadeQ = pygame.image.load('Cartas/Espadas/Q.png')
diamondK = pygame.image.load('Cartas/Diamantes/K.png')
clubK = pygame.image.load('Cartas/Trebol/K.png')
heartK = pygame.image.load('Cartas/Corazones/K.png')
spadeK = pygame.image.load('Cartas/Espadas/K.png')

#Constantes globales
black = (0,0,0)
white = (255,255,255)
gray = (192, 192, 192)

cards = [ diamondA, clubA, heartA, spadeA,
          diamond2, club2, heart2, spade2,
          diamond3, club3, heart3, spade3,
          diamond4, club4, heart4, spade4,
          diamond5, club5, heart5, spade5,
          diamond6, club6, heart6, spade6,
          diamond7, club7, heart7, spade7,
          diamond8, club8, heart8, spade8,
          diamond9, club9, heart9, spade9,
          diamond10, club10, heart10, spade10,
          diamondJ, clubJ, heartJ, spadeJ,
          diamondQ, clubQ, heartQ, spadeQ,
          diamondK, clubK, heartK, spadeK ]
cardA = [ diamondA, clubA, heartA, spadeA ]
card2 = [ diamond2, club2, heart2, spade2 ]
card3 = [ diamond3, club3, heart3, spade3 ]
card4 = [ diamond4, club4, heart4, spade4 ]
card5 = [ diamond5, club5, heart5, spade5 ]
card6 = [ diamond6, club6, heart6, spade6 ]
card7 = [ diamond7, club7, heart7, spade7 ]
card8 = [ diamond8, club8, heart8, spade8 ]
card9 = [ diamond9, club9, heart9, spade9 ]
card10 = [ diamond10, club10, heart10, spade10,
            diamondJ, clubJ, heartJ, spadeJ,
            diamondQ, clubQ, heartQ, spadeQ,
            diamondK, clubK, heartK, spadeK ]

def getAmt(card):
    ''' Devuelve el valor de la carta.
Por ejemplo, Ace es 1.  10 / Jack / Queen / King es 10. '''
    if card in cardA:
        return 1
    elif card in card2:
        return 2
    elif card in card3:
        return 3
    elif card in card4:
        return 4
    elif card in card5:
        return 5
    elif card in card6:
        return 6
    elif card in card7:
        return 7
    elif card in card8:
        return 8
    elif card in card9:
        return 9
    elif card in card10:
        return 10
    else:
        print('getAmt broke')
        exit()

def genCard(cList, xList):
    '''Genera un carta de Clist, la remueve de esta lista, y la agrega a xList.
Devuelve si la carta es un As y la misma carta.'''
    cA = 0
    card = random.choice(cList)
    cList.remove(card)
    xList.append(card)
    if card in cardA:
        cA = 1
    return card, cA

def initGame(cList, uList, dList):
    ''' Genera dos cartas para el dealer y el usuario, una a la vez para cada uno.
Devuelve si la carta es As y el monto total de las tarjetas por persona.'''
    userA = 0
    dealA = 0
    card1, cA = genCard(cList, uList)
    userA += cA
    card2, cA = genCard(cList, dList)
    dealA += cA
    card3, cA = genCard(cList, uList)
    userA += cA
    card4, cA = genCard(cList, dList)
    dealA += cA
    return getAmt(card1) + getAmt(card3), userA, getAmt(card2) + getAmt(card4), dealA

def main():
    #Variables locales
    ccards = copy.copy(cards)
    stand = False
    userCard = []
    dealCard = []
    winNum = 0
    loseNum = 0

    #Inicializar el juego
    pygame.init()
    screen = pygame.display.set_mode((640, 480))
    pygame.display.set_caption('Blackjack')
    font = pygame.font.SysFont('arial', 15)
    hitTxt = font.render('Pedir carta', 0, black)
    standTxt = font.render('Plantarse', 0, black)
    restartTxt = font.render('Volver a jugar', 1, black)
    gameoverTxt = font.render('JUEGO TERMINADO', 1, white)
    userSum, userA, dealSum, dealA = initGame(ccards, userCard, dealCard)
    

    #el fondo
    background = pygame.Surface(screen.get_size())
    background = background.convert()
    background.fill((80, 150, 15))
    hitB = pygame.draw.rect(background, gray, (10, 445, 75, 25))
    standB = pygame.draw.rect(background, gray, (110, 445, 75, 25))


    #el loop
    while True:
        #comprueba si el juego ha terminado
        gameover = True if (userSum >= 21 and userA == 0) or len(userCard) == 5 else False
        if len(userCard) == 2 and userSum == 21:
            gameover = True
        elif len(dealCard) == 2 and dealSum == 21:
            gameover = True

        #el fondo necesita volver a mostrarse porque se actualiza
        winTxt = font.render('Victorias: %i' % winNum, 1, black)
        loseTxt = font.render('Derrotas: %i' % loseNum, 1, black)

        #comprueba que si el mouse hace click en los botones
        for event in pygame.event.get():
            if event.type == QUIT:
                quit()

            elif event.type == pygame.MOUSEBUTTONDOWN and not (gameover or stand) and hitB.collidepoint(pygame.mouse.get_pos()):
                #le da al jugador una carta si no rompe las reglas del blackjack
                card, cA = genCard(ccards, userCard)
                userA += cA
                userSum += getAmt(card)
                print('User: %i' % userSum)
                while userSum > 21 and userA > 0:
                    userA -= 1
                    userSum -= 10
            elif event.type == pygame.MOUSEBUTTONDOWN and not gameover and standB.collidepoint(pygame.mouse.get_pos()):
                #cuando el jugador deja de pedir cartas, el dealer juega
                stand = True
                while dealSum <= userSum and dealSum < 17:
                    card, cA = genCard(ccards, dealCard)
                    dealA += cA
                    dealSum += getAmt(card)
                    print('Dealer: %i'% dealSum)
                    while dealSum > 21 and dealA > 0:
                        dealA -= 1
                        dealSum -= 10
            elif event.type == pygame.MOUSEBUTTONDOWN and (gameover or stand) and restartB.collidepoint(pygame.mouse.get_pos()):
                #reinicia el juego, actualizando puntajes
                if userSum == dealSum:
                    pass
                elif userSum <= 21 and len(userCard) == 5:
                    winNum += 1
                elif userSum <= 21 and dealSum < userSum or dealSum > 21:
                    winNum += 1
                else:
                    loseNum += 1
                gameover = False
                stand = False
                userCard = []
                dealCard = []
                ccards = copy.copy(cards)
                userSum, userA, dealSum, dealA = initGame(ccards, userCard, dealCard)
                restartB = pygame.draw.rect(background, (80, 150, 15), (270, 225, 75, 25))

        screen.blit(background, (0, 0))
        screen.blit(hitTxt, (18, 448))
        screen.blit(standTxt, (121, 448))
        screen.blit(winTxt, (565, 423))
        screen.blit(loseTxt, (565, 448))

        #muestra las cartas del dealer
        for card in dealCard:
            x = 10 + dealCard.index(card) * 110
            screen.blit(card, (x, 10))
        screen.blit(cBack, (120, 10))

        #muestra las cartas del jugador
        for card in userCard:
            x = 10 + userCard.index(card) * 110
            screen.blit(card, (x, 295))

        #cuando el juego termina, dibuja el bot√≥n y el texto de reinicio, y muestra la segunda carta del dealer
        if gameover or stand:
            screen.blit(gameoverTxt, (250, 200))
            restartB = pygame.draw.rect(background, gray, (270, 225, 75, 25))
            screen.blit(restartTxt, (271, 228))
            screen.blit(dealCard[1], (120, 10))
        pygame.display.update()


main()
